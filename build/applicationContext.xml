<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:jdbc="http://www.springframework.org/schema/jdbc" xmlns:jpa="http://www.springframework.org/schema/data/jpa"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jee="http://www.springframework.org/schema/jee" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:task="http://www.springframework.org/schema/task"
	xsi:schemaLocation="http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
                      http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
                      http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
                      http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-3.0.xsd
                      http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
                      http://www.springframework.org/schema/data/jpa http://www.springframework.org/schema/data/jpa/spring-jpa.xsd
                      http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd
                      http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-3.0.xsd
                      ">
                      
	<context:property-placeholder location="classpath:*.properties" />
	<context:annotation-config />
	<!-- 自动扫描component -->
	<context:component-scan base-package="cn" />
	
	<!-- 任务注解 
	<task:annotation-driven/>-->
	<!-- 该 BeanPostProcessor 将自动起作用，对标注 @Autowired 的 Bean 进行自动注入   
	<bean class="org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor"/> 
	--> 
	
	<!-- 数据库连接池-dbcp -->
	<!-- <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"
		destroy-method="close">
		<property name="driverClassName" value="${jdbc.driverClassName}" />
		<property name="url" value="${jdbc.url}" />
		<property name="username" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" /> -->
		<!-- 连接池启动时的初始值 
		<property name="initialSize" value="2" />-->
		<!-- 连接池的最大值 
		<property name="maxActive" value="10" />-->
		<!-- 最大空闲值:当经过一个高峰时间后,连接池可以慢慢将已经用不到的连接慢慢释放一部分,一直减少到maxIdle为止 
		<property name="maxIdle" value="5" />-->
		<!-- 最小空闲值:当空闲的连接数少于阀值时,连接池就会预申请去一些连接,以免洪峰来时来不及申请 
		<property name="minIdle" value="1" />
	</bean>
	-->
	<!-- Hibernate 使用的 SessionFactory 
	<bean id="sessionFactory" class="org.springframework.orm.hibernate3.LocalSessionFactoryBean">
		<property name="dataSource">
			<ref bean="dataSource"/>
		</property>
	</bean>

 -->
 
	<!-- <bean id="entityManagerFactory"
		class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
		<property name="persistenceUnitName" value="MES_RBAC_JPA" />
		<property name="dataSource" ref="dataSource" />
		<property name="loadTimeWeaver">运行时植入
			<bean
				class="org.springframework.instrument.classloading.InstrumentationLoadTimeWeaver" />
		</property>
		<property name="jpaVendorAdapter">
			<bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter" />
		</property>
	</bean> -->

	<import resource="configfile/webservice/employeeWebServices.xml" />
	<!--
	<bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
		<property name="entityManagerFactory" ref="entityManagerFactory" />
	</bean>
	-->
	
	<!-- 事务声明方式是注解 
	<tx:annotation-driven transaction-manager="transactionManager" />
	-->
	
	
</beans>
